[circus]
check_delay = 5
endpoint = ${options['endpoint']}
pubsub_endpoint = ${options['pubsub_endpoint']}
umask = 002
logoutput = ${parts.buildout.directory}/var/log/circus.log
{% if 'httpd' in options and options['httpd'] %}
httpd = 1
httpd_host = ${options['httpd_host']}
httpd_port = ${options['httpd_port']}
{% end %}
statsd = ${options['statsd']}

{% if options['couchdb'] %}
[watcher:db]
cmd = couchdb
args = -a ${parts.buildout.directory}/etc/couchdb.ini
priority = 100
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/couchdb.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/couchdb.stderr.log
{% if 'log_size' in options %}
stdout_stream.max_bytes = ${options['log_size']}
stderr_stream.max_bytes = ${options['log_size']}
{% end %}
{% if 'backup_count' in options %}
stdout_stream.backup_count = ${options['backup_count']}
stderr_stream.backup_count = ${options['backup_count']}
{% end %}

[env:db]
HOME = ${parts.buildout.directory}/var

[plugin:db_http]
use = circus.plugins.http_observer.HttpObserver
restart_on_error = db
check_url = http://${parts['couchdb.ini'].host}:${parts['couchdb.ini'].port}/
{% end %}


{% if options['webapp'] %}
[watcher:webapp]
cmd = ${parts.buildout.directory}/bin/gunicorn  --paste ${parts['api.ini'].output} 

stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/webapp.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/webapp.stderr.log
{% if 'log_size' in options %}
stdout_stream.max_bytes = ${options['log_size']}
stderr_stream.max_bytes = ${options['log_size']}
{% end %}
{% if 'backup_count' in options %}
stdout_stream.backup_count = ${options['backup_count']}
stderr_stream.backup_count = ${options['backup_count']}
{% end %}

[plugin:webapp_resource]
use = circus.plugins.resource_watcher.ResourceWatcher
watcher = webapp
max_cpu = 95
max_mem = 400M
{% end %}

{% if options['webapp'] and 'webapp2' in options and options['webapp2'] %}
[watcher:webapp2]
cmd = ${parts.buildout.directory}/bin/gunicorn  --paste ${parts['api.ini'].output} 
numprocesses = ${options['numprocesses'] if 'numprocesses' in options else '1'}

stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/webapp.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/webapp.stderr.log
{% if 'log_size' in options %}
stdout_stream.max_bytes = ${options['log_size']}
stderr_stream.max_bytes = ${options['log_size']}
{% end %}
{% if 'backup_count' in options %}
stdout_stream.backup_count = ${options['backup_count']}
stderr_stream.backup_count = ${options['backup_count']}
{% end %}

[plugin:webapp2_resource]
use = circus.plugins.resource_watcher.ResourceWatcher
watcher = webapp2
max_cpu = 95
max_mem = 400M
{% end %}